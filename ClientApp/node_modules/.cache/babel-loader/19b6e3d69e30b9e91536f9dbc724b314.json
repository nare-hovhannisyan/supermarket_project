{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\onlineSuperMarketApp\\\\src\\\\Components\\\\signin\\\\index.js\";\nimport React, { Component } from \"react\"; //import { firebase } from \"../../firebase\"\n\nimport FormField from \"../ui/formFields\";\nimport { validate } from \"../ui/tag\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: \"\",\n      formdata: {\n        email: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            name: \"email_input\",\n            type: \"email\",\n            placeholder: \"Enter you email\"\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          validationMessage: \"\"\n        },\n        password: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            name: \"password_input\",\n            type: \"password\",\n            placeholder: \"Enter you password\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: \"\"\n        }\n      }\n    };\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    let dataToSubmit = {};\n    let formIsValid = true;\n\n    for (let key in this.state.formdata) {\n      dataToSubmit[key] = this.state.formdata[key].value;\n      formIsValid = this.state.formdata[key].valid && formIsValid;\n    }\n\n    if (formIsValid) {\n      firebase.auth().signInWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password).then(() => {\n        this.props.history.push(\"/dashboard\");\n      }).catch(error => {\n        this.setState({\n          formError: true\n        });\n      }); // this.resetFormSucces();\n    } else {\n      this.setState({\n        formError: true\n      });\n    }\n  }\n\n  updateForm(element) {\n    const newFormdata = { ...this.state.formdata\n    };\n    const newElement = { ...newFormdata[element.id]\n    };\n    newElement.value = element.event.target.value;\n    let valiData = validate(newElement);\n    newElement.valid = valiData[0];\n    newElement.validationMessage = valiData[1];\n    newFormdata[element.id] = newElement;\n    this.setState({\n      formError: false,\n      formdata: newFormdata\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signin_wrapper\",\n      style: {\n        margin: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Please Login\"), React.createElement(FormField, {\n      id: \"email\",\n      formdata: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(FormField, {\n      id: \"password\",\n      formdata: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.state.formError ? React.createElement(\"div\", {\n      className: \"error_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Something is wrong , try again.\") : null, React.createElement(\"button\", {\n      onClick: event => this.submitForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/User/Desktop/onlineSuperMarketApp/src/Components/signin/index.js"],"names":["React","Component","FormField","validate","SignIn","state","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","validationMessage","password","submitForm","event","preventDefault","dataToSubmit","formIsValid","key","firebase","auth","signInWithEmailAndPassword","then","props","history","push","catch","error","setState","updateForm","newFormdata","newElement","id","target","valiData","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import { firebase } from \"../../firebase\"\r\nimport FormField from \"../ui/formFields\";\r\nimport { validate } from \"../ui/tag\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    formError: false,\r\n    formSuccess: \"\",\r\n    formdata: {\r\n      email: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          name: \"email_input\",\r\n          type: \"email\",\r\n          placeholder: \"Enter you email\"\r\n        },\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        },\r\n        valid: false,\r\n        validationMessage: \"\"\r\n      },\r\n      password: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          name: \"password_input\",\r\n          type: \"password\",\r\n          placeholder: \"Enter you password\"\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        validationMessage: \"\"\r\n      }\r\n    }\r\n  };\r\n\r\n  submitForm(event) {\r\n    event.preventDefault();\r\n\r\n    let dataToSubmit = {};\r\n    let formIsValid = true;\r\n\r\n    for (let key in this.state.formdata) {\r\n      dataToSubmit[key] = this.state.formdata[key].value;\r\n      formIsValid = this.state.formdata[key].valid && formIsValid;\r\n    }\r\n    if (formIsValid) {\r\n      firebase.auth()\r\n      .signInWithEmailAndPassword(\r\n          dataToSubmit.email,\r\n          dataToSubmit.password\r\n      ).then(()=>{\r\n            this.props.history.push(\"/dashboard\");\r\n      }).catch(error => {\r\n          this.setState({\r\n              formError: true\r\n          })\r\n      })\r\n      // this.resetFormSucces();\r\n    } else {\r\n      this.setState({\r\n        formError: true\r\n      });\r\n    }\r\n  }\r\n  updateForm(element) {\r\n    const newFormdata = { ...this.state.formdata };\r\n    const newElement = { ...newFormdata[element.id] };\r\n\r\n    newElement.value = element.event.target.value;\r\n\r\n    let valiData = validate(newElement);\r\n\r\n    newElement.valid = valiData[0];\r\n    newElement.validationMessage = valiData[1];\r\n\r\n    newFormdata[element.id] = newElement;\r\n\r\n    this.setState({\r\n      formError: false,\r\n      formdata: newFormdata\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"signin_wrapper\" style={{ margin: \"100px\" }}>\r\n          <form onSubmit={(event) => this.submitForm(event)}>\r\n            <h2>Please Login</h2>\r\n\r\n            <FormField\r\n              id={\"email\"}\r\n              formdata={this.state.formdata.email}\r\n              change={(element) => this.updateForm(element)}\r\n            />\r\n            <FormField\r\n              id={\"password\"}\r\n              formdata={this.state.formdata.password}\r\n              change={(element) => this.updateForm(element)}\r\n            />\r\n            {this.state.formError ? (\r\n                <div className=\"error_label\">\r\n                  Something is wrong , try again.\r\n                </div>\r\n              ) : null}\r\n            <button onClick={(event) => this.submitForm(event)}>Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}