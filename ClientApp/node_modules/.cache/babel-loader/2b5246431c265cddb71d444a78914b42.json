{"ast":null,"code":"var _jsxFileName = \"/Users/narehovhannisyan/Desktop/helpsystems/c#/Thenewwebapi/ClientApp/src/Components/ui/formFields.js\";\nimport React from \"react\";\n\nconst FormField = ({\n  formdata,\n  id,\n  change\n}) => {\n  const showError = () => {\n    let errorMessage = React.createElement(\"div\", {\n      className: \"error_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, formdata.validation && !formdata.valid ? formdata.validationMesage : null);\n    return errorMessage;\n  };\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formdata.element) {\n      case \"input\":\n        formTemplate = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, formdata.showlabel ? React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, formdata.config.label) : null, React.createElement(\"input\", Object.assign({}, formdata.config, {\n          value: formdata.value,\n          onChange: event => change({\n            event,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        })), showError());\n        break;\n\n      case \"select\":\n        formTemplate = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, formdata.showlabel ? React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, formdata.config.label) : null, React.createElement(\"select\", {\n          value: formdata.value,\n          onChange: event => change({\n            event,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Select one\"), formdata.config.options.map(item => React.createElement(\"option\", {\n          key: item.key,\n          value: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, item.value))), showError());\n        break;\n\n      default:\n        formTemplate = null;\n        break;\n    }\n\n    return formTemplate;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, renderTemplate());\n};\n\nexport default FormField;","map":{"version":3,"sources":["/Users/narehovhannisyan/Desktop/helpsystems/c#/Thenewwebapi/ClientApp/src/Components/ui/formFields.js"],"names":["React","FormField","formdata","id","change","showError","errorMessage","validation","valid","validationMesage","renderTemplate","formTemplate","element","showlabel","config","label","value","event","options","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,EAAZ;AAAgBC,EAAAA;AAAhB,CAAD,KAA8B;AAC9C,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,YAAY,GACd;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,CAACK,UAAT,IAAuB,CAACL,QAAQ,CAACM,KAAjC,GACGN,QAAQ,CAACO,gBADZ,GAEG,IAHN,CADF;AAQA,WAAOH,YAAP;AACD,GAVD;;AAYA,QAAMI,cAAc,GAAG,MAAM;AAC3B,QAAIC,YAAY,GAAG,IAAnB;;AAEA,YAAQT,QAAQ,CAACU,OAAjB;AACE,WAAK,OAAL;AACED,QAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGT,QAAQ,CAACW,SAAT,GACC;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BX,QAAQ,CAACY,MAAT,CAAgBC,KAA/C,CADD,GAEG,IAHN,EAIE,+CACMb,QAAQ,CAACY,MADf;AAEE,UAAA,KAAK,EAAEZ,QAAQ,CAACc,KAFlB;AAGE,UAAA,QAAQ,EAAEC,KAAK,IAAIb,MAAM,CAAC;AAAEa,YAAAA,KAAF;AAASd,YAAAA;AAAT,WAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAUGE,SAAS,EAVZ,CADF;AAcA;;AAEF,WAAK,QAAL;AACEM,QAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGT,QAAQ,CAACW,SAAT,GACC;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BX,QAAQ,CAACY,MAAT,CAAgBC,KAA/C,CADD,GAEG,IAHN,EAIE;AACE,UAAA,KAAK,EAAEb,QAAQ,CAACc,KADlB;AAEE,UAAA,QAAQ,EAAEC,KAAK,IAAIb,MAAM,CAAC;AAAEa,YAAAA,KAAF;AAASd,YAAAA;AAAT,WAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKGD,QAAQ,CAACY,MAAT,CAAgBI,OAAhB,CAAwBC,GAAxB,CAA4BC,IAAI,IAC/B;AAAQ,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAlB;AAAuB,UAAA,KAAK,EAAED,IAAI,CAACC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACJ,KADR,CADD,CALH,CAJF,EAgBGX,SAAS,EAhBZ,CADF;AAoBA;;AACF;AACEM,QAAAA,YAAY,GAAG,IAAf;AACA;AA1CJ;;AA6CA,WAAOA,YAAP;AACD,GAjDD;;AAmDA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,cAAc,EAApB,CAAP;AACD,CAjED;;AAmEA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst FormField = ({ formdata, id, change }) => {\r\n  const showError = () => {\r\n    let errorMessage = (\r\n      <div className=\"error_label\">\r\n        {formdata.validation && !formdata.valid\r\n          ? formdata.validationMesage\r\n          : null}\r\n      </div>\r\n    );\r\n\r\n    return errorMessage;\r\n  };\r\n\r\n  const renderTemplate = () => {\r\n    let formTemplate = null;\r\n\r\n    switch (formdata.element) {\r\n      case \"input\":\r\n        formTemplate = (\r\n          <div>\r\n            {formdata.showlabel ? (\r\n              <div className=\"label_inputs\">{formdata.config.label}</div>\r\n            ) : null}\r\n            <input\r\n              {...formdata.config}\r\n              value={formdata.value}\r\n              onChange={event => change({ event, id })}\r\n            />\r\n\r\n            {showError()}\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      case \"select\":\r\n        formTemplate = (\r\n          <div>\r\n            {formdata.showlabel ? (\r\n              <div className=\"label_inputs\">{formdata.config.label}</div>\r\n            ) : null}\r\n            <select\r\n              value={formdata.value}\r\n              onChange={event => change({ event, id })}\r\n            >\r\n              <option value=\"\">Select one</option>\r\n              {formdata.config.options.map(item => (\r\n                <option key={item.key} value={item.key}>\r\n                  {item.value}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            {showError()}\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        formTemplate = null;\r\n        break;\r\n    }\r\n\r\n    return formTemplate;\r\n  };\r\n\r\n  return <div>{renderTemplate()}</div>;\r\n};\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}