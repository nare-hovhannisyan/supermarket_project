{"ast":null,"code":"var _jsxFileName = \"/Users/narehovhannisyan/Desktop/helpsystems/c#/Thenewwebapi/ClientApp/src/Components/signin/index.js\";\nimport React, { Component } from \"react\"; //import { firebase } from \"../../firebase\"\n\nimport FormField from \"../ui/formFields\";\nimport { validate } from \"../ui/tag\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: \"\",\n      formdata: {\n        email: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            name: \"email_input\",\n            type: \"email\",\n            placeholder: \"Enter you email\"\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          validationMessage: \"\"\n        },\n        password: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            name: \"password_input\",\n            type: \"password\",\n            placeholder: \"Enter you password\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: \"\"\n        }\n      }\n    };\n  }\n\n  submitForm(event) {// event.preventDefault();\n    // let dataToSubmit = {};\n    // let formIsValid = true;\n    // for (let key in this.state.formdata) {\n    //   dataToSubmit[key] = this.state.formdata[key].value;\n    //   formIsValid = this.state.formdata[key].valid && formIsValid;\n    // }\n    // if (formIsValid) {\n    //   firebase\n    //     .auth()\n    //     .signInWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password)\n    //     .then(() => {\n    //       this.props.history.push(\"/dashboard\");\n    //     })\n    //     .catch(error => {\n    //       this.setState({\n    //         formError: true\n    //       });\n    //     });\n    //   // this.resetFormSucces();\n    // } else {\n    //   this.setState({\n    //     formError: true\n    //   });\n    // }\n  }\n\n  updateForm(element) {\n    const newFormdata = { ...this.state.formdata\n    };\n    const newElement = { ...newFormdata[element.id]\n    };\n    newElement.value = element.event.target.value;\n    let valiData = validate(newElement);\n    newElement.valid = valiData[0];\n    newElement.validationMessage = valiData[1];\n    newFormdata[element.id] = newElement;\n    this.setState({\n      formError: false,\n      formdata: newFormdata\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signin_wrapper\",\n      style: {\n        margin: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Please Signin\"), React.createElement(FormField, {\n      id: \"email\",\n      formdata: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(FormField, {\n      id: \"password\",\n      formdata: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.formError ? React.createElement(\"div\", {\n      className: \"error_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Something is wrong , try again.\") : null, React.createElement(\"button\", {\n      onClick: event => this.submitForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Signin\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/narehovhannisyan/Desktop/helpsystems/c#/Thenewwebapi/ClientApp/src/Components/signin/index.js"],"names":["React","Component","FormField","validate","SignIn","state","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","validationMessage","password","submitForm","event","updateForm","newFormdata","newElement","id","target","valiData","setState","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import { firebase } from \"../../firebase\"\r\nimport FormField from \"../ui/formFields\";\r\nimport { validate } from \"../ui/tag\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    formError: false,\r\n    formSuccess: \"\",\r\n    formdata: {\r\n      email: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          name: \"email_input\",\r\n          type: \"email\",\r\n          placeholder: \"Enter you email\"\r\n        },\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        },\r\n        valid: false,\r\n        validationMessage: \"\"\r\n      },\r\n      password: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          name: \"password_input\",\r\n          type: \"password\",\r\n          placeholder: \"Enter you password\"\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        validationMessage: \"\"\r\n      }\r\n    }\r\n  };\r\n\r\n  submitForm(event) {\r\n    // event.preventDefault();\r\n    // let dataToSubmit = {};\r\n    // let formIsValid = true;\r\n    // for (let key in this.state.formdata) {\r\n    //   dataToSubmit[key] = this.state.formdata[key].value;\r\n    //   formIsValid = this.state.formdata[key].valid && formIsValid;\r\n    // }\r\n    // if (formIsValid) {\r\n    //   firebase\r\n    //     .auth()\r\n    //     .signInWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password)\r\n    //     .then(() => {\r\n    //       this.props.history.push(\"/dashboard\");\r\n    //     })\r\n    //     .catch(error => {\r\n    //       this.setState({\r\n    //         formError: true\r\n    //       });\r\n    //     });\r\n    //   // this.resetFormSucces();\r\n    // } else {\r\n    //   this.setState({\r\n    //     formError: true\r\n    //   });\r\n    // }\r\n  }\r\n  updateForm(element) {\r\n    const newFormdata = { ...this.state.formdata };\r\n    const newElement = { ...newFormdata[element.id] };\r\n\r\n    newElement.value = element.event.target.value;\r\n\r\n    let valiData = validate(newElement);\r\n\r\n    newElement.valid = valiData[0];\r\n    newElement.validationMessage = valiData[1];\r\n\r\n    newFormdata[element.id] = newElement;\r\n\r\n    this.setState({\r\n      formError: false,\r\n      formdata: newFormdata\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"signin_wrapper\" style={{ margin: \"100px\" }}>\r\n          <form onSubmit={event => this.submitForm(event)}>\r\n            <h2>Please Signin</h2>\r\n\r\n            <FormField\r\n              id={\"email\"}\r\n              formdata={this.state.formdata.email}\r\n              change={element => this.updateForm(element)}\r\n            />\r\n            <FormField\r\n              id={\"password\"}\r\n              formdata={this.state.formdata.password}\r\n              change={element => this.updateForm(element)}\r\n            />\r\n            {this.state.formError ? (\r\n              <div className=\"error_label\">Something is wrong , try again.</div>\r\n            ) : null}\r\n            <button onClick={event => this.submitForm(event)}>Signin</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}